name: ecommerce-django

services:
  ecommerce-app:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: ecommerce-app
    ports:
      - "8000:8000"
    networks:
      - ecommerce-django-network
    volumes:
      - ./:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1
    mem_limit: 512m
    stdin_open: true 
    tty: true

  ecommerce-postgres:
    image: postgres:latest
    container_name: ecommerce-psql
    # restart: always
    networks:
      - ecommerce-django-network
    volumes:
      - app-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: ec-db
    mem_limit: 512mb

  ecommerce-redis:
    image: redis:latest
    container_name: ecommerece-redis
    networks:
      - ecommerce-django-network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    mem_limit: 256m
  
  ecommerce-ngrok:
    image: ngrok/ngrok:latest
    network_mode: host
    environment:
      - NGROK_AUTHTOKEN=2wnxGfsaNvmBBnNMeD8hocMbQsF_7gbtC95SbxDWurqp92Q7F
    command: http --log=stdout 8000
    stdin_open: true
    tty: true
    mem_limit: 128m

  minio-storage:
    image: quay.io/minio/minio
    container_name: ec-minio
    networks:
      - ecommerce-django-network
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: user123
      MINIO_ROOT_PASSWORD: pass123123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data




networks:
  ecommerce-django-network:
    driver: bridge

volumes:
  app-volume:
  pgadmin-volume:
  redis_data:
  pgadmin-data:
  minio_data:
