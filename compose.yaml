name: ecommerce-django

services:
  ecommerce-app:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: app-container
    ports:
      - "8000:8000"
    networks:
      - ecommerce-django-network
    volumes:
      - ./:/usr/src/app
    environment:
      - PYTHONUNBUFFERED=1

  postgres-db:
    image: postgres:latest
    container_name: psql-container
    restart: always
    networks:
      - ecommerce-django-network
    volumes:
      - app-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: ec-db
  ngrok:
    image: ngrok/ngrok:latest
    network_mode: host
    environment:
      - NGROK_AUTHTOKEN=2wnxGfsaNvmBBnNMeD8hocMbQsF_7gbtC95SbxDWurqp92Q7F
    command: http --log=stdout 8000
    stdin_open: true
    tty: true

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    networks:
      - ecommerce-django-network
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin-volume:/var/lib/pgadmin
      - ./rawsql:/var/lib/pgadmin/storage/admin_example.com:rw

networks:
  ecommerce-django-network:
    driver: bridge

volumes:
  app-volume:
  pgadmin-volume:
